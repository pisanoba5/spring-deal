<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.pjt.deal.mainMapper">
	
	<select id="join" parameterType="String" resultType="com.pjt.deal.dto.UserDTO">
		SELECT * FROM user WHERE userID = #{userID}
	</select>
	
	<select id="userRegisterCheck" parameterType="String" resultType="int">
		SELECT count(userID) FROM user WHERE userID = #{userID}
	</select>
	<select id="getUser" parameterType="String" resultType="com.pjt.deal.dto.UserDTO">
		select * from user where userID = #{userID}
	</select>
	<insert id="userRegister" parameterType="com.pjt.deal.dto.UserDTO">
			
		INSERT 
		INTO user
		(
		  	userID,
		  	userPassword,
		  	userName,
		  	userAge,
		  	userPostCode,
			userAddress,
			userDetailAddress,
			userExtraAddress,
			userPhone1,
			userPhone2,
			userPhone3,
		  	userGender,
		  	userEmail,
		  	userImg
		) 
		VALUES 
		(
			  #{userID}
			, #{userPassword}
			, #{userName}
			, #{userAge}
			, #{userPostCode}
			, #{userAddress}
			, #{userDetailAddress}
			, #{userExtraAddress}
			, #{userPhone1}
			, #{userPhone2}
			, #{userPhone3}
			, #{userGender}
			, #{userEmail}
			, #{userImg}
		)	
	</insert>
	<update id="setModify" parameterType="com.pjt.deal.dto.UserDTO">
		update user
		set userPassword = #{userPassword}, userImg = #{userImg}
		where
		userID = #{userID}
	</update>
	<select id="getLastChatID" parameterType="hashMap" resultType="String">
		select max(chatID) from chat where ((fromID = #{fromID} and toID = #{toID} and goodsID = #{goodsID}) or (fromID = #{toID} and toID = #{fromID} and goodsID = #{goodsID})) order by chatTime
	</select>
	
	<select id="getChatListByRecent" parameterType="hashMap" resultType="com.pjt.deal.dto.ChatDTO">
		select fromID,toID,chatContent,chatTime,userImg  from chat A left join user B on fromID = userID where ((fromID = #{fromID} and toID = #{toID} and goodsID = #{goodsID}) or (fromID = #{toID} and toID = #{fromID} and goodsID = #{goodsID})) and chatID > ${chatID} order by chatID asc;
		<!-- select * from chat where ((fromID = #{fromID} and toID = #{toID} and goodsID = #{goodsID}) or (fromID = #{toID} and toID = #{fromID} and goodsID = #{goodsID})) and chatID > ${chatID} order by chatTime -->
	</select>
	
	<update id="readChat" parameterType="hashMap">
		update chat
		set chatRead = 1
		where fromID = #{toID} and toID = #{fromID} and goodsID = #{goodsID}
	</update>
	
	<select id="getAllUnReadChat" parameterType="String" resultType="int">
		select count(*) from chat A left join goods B on A.goodsID = B.goodsID where toID = #{userID} and B.state='Y' and chatRead = 0
	</select>
	
	<select id="getBox" parameterType="String" resultType="com.pjt.deal.dto.ChatDTO">
		select  chatID,fromID,toID,chatContent,chatTime,chatRead,A.goodsID,userID,goodsNAME,city1,city2,B.state,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,if(chatRead=0,count(chatRead),0)as unRead 
		from chat A left join goods B on A.goodsID = B.goodsID  
		where <![CDATA[A.goodsID <> 'null']]>and chatID in (SELECT max(chatID) FROM chat where <![CDATA[goodsID <> 'null']]> and (fromID=#{userID}or toID=#{userID}) group by fromID,toID,goodsID)
		and  (fromID=#{userID}or toID=#{userID}) and B.state in('Y','C','N') group by fromID,toID,goodsID order by B.goodsID;
		
		<!-- select  chatID,fromID,toID,chatContent,chatTime,chatRead,A.goodsID,userID,goodsNAME,city1,city2,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,if(chatRead=0,count(chatRead),0) as unRead 
		from chat A left join goods B on A.goodsID = B.goodsID  
		where <![CDATA[A.goodsID <> 'null']]> and  chatID in (  select chatID from chat where <![CDATA[A.goodsID <> 'null']]> and chatRead=0 and (fromID=#{userID} or toID=#{userID} ) order by A.goodsID asc) group by A.goodsID ; -->
	</select>
	<select id="getUnRead" parameterType="hashMap" resultType="com.pjt.deal.dto.ChatDTO">
		select count(chatRead) as unRead from chat where goodsID = #{goodsID} and chatRead=0 and (fromID=#{fromID} and toID=#{toID});
	</select>
	<insert id="chatSubmit" parameterType="com.pjt.deal.dto.UserDTO">
			
		INSERT 
		INTO chat
		(
			fromID,
			toID,
			chatContent,
			chatTime,
			chatRead,
			goodsID
		) 
		VALUES 
		(
			  #{fromID}
			, #{toID}
			, #{chatContent}
			, now()
			, 0
			, #{goodsID}
		)	
			
	</insert>
	<select id="getCity" parameterType="String" resultType="com.pjt.deal.dto.CityDTO">
		select * from city where city1 = #{city}
	</select>
	<insert id="setGoods" parameterType="com.pjt.deal.dto.GoodsDTO">
		insert 
		into goods
		(
			userID,
			goodsNAME,
			city1,
			city2,
			goodsCONTENT,
			goodsPRICE,
			goodsCATE,
			goodsIMG1,
			goodsIMG2,
			goodsIMG3,
			goodsTIME
		)values
		(
			#{userID},
			#{goodsNAME},
			#{city1},
			#{city2},
			#{goodsCONTENT},
			#{goodsPRICE},
			#{goodsCATE},
			#{goodsIMG1},
			#{goodsIMG2},
			#{goodsIMG3},
			NOW()
			
		)
	</insert>
	<select id="getNewGoodsList" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' and goodsTIME >= date_add(now(),interval-30 day) order by goodsID desc limit 6 offset 0 
	</select>
	<select id="getAllNewGoodsList" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' and goodsTIME >= date_add(now(),interval-30 day) order by goodsID desc
	</select>
	<select id="getGoods" parameterType="hashmap" resultType="com.pjt.deal.dto.GoodsDTO">
		SELECT goodsID,A.userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT,userImg FROM goods A inner join user B on A.userID = B.userID  where A.goodsID = #{goodsID} and A.userID = #{userID} and state = 'Y'
	</select>
	<select id="getMyGoods" parameterType="String" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' and userID = #{userID}
	</select>
	<select id="getChatGoods" parameterType="int" resultType="com.pjt.deal.dto.GoodsDTO">
		SELECT * FROM goods where goodsID = #{goodsID} and state = 'Y'
	</select>
	<select id="getModifyGoods" parameterType="int" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' and goodsID = #{goodsID}
	</select>
	<select id="getSearchGoodsName" parameterType="String" resultType="com.pjt.deal.dto.GoodsDTO">
		 select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' and goodsNAME like CONCAT('%',#{goodsNAME},'%') or userID like CONCAT('%',#{goodsNAME},'%')
	</select>
	<select id="getDetailSearchGoods" parameterType="hashMap" resultType="com.pjt.deal.dto.GoodsDTO">
		select  goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT 
		from goods 
		where state = 'Y' and
		case 
        when #{goodsPRICE} = 1 then goodsPRICE between 0 and 100000 
		when #{goodsPRICE} = 2 then goodsPRICE between 100000 and 200000 
        when #{goodsPRICE} = 3 then goodsPRICE between 200000 and 300000
        when #{goodsPRICE} = 4 then goodsPRICE between 300000 and 400000 
        when #{goodsPRICE} = 5 then goodsPRICE between 400000 and 500000 
        else goodsPRICE > 500000
        end
		and city1=#{city1} and city2=#{city2} and goodsCATE in
		<foreach collection="cate" item="cate" open="(" close=")" separator=",">
			#{cate}
		</foreach>
	</select>
	<select id="getDetailSearchGoods2" parameterType="hashMap" resultType="com.pjt.deal.dto.GoodsDTO">
		select  goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT 
		from goods 
		where state = 'Y' and
		case 
        when #{goodsPRICE} = 1 then goodsPRICE between 0 and 100000 
		when #{goodsPRICE} = 2 then goodsPRICE between 100000 and 200000 
        when #{goodsPRICE} = 3 then goodsPRICE between 200000 and 300000
        when #{goodsPRICE} = 4 then goodsPRICE between 300000 and 400000 
        when #{goodsPRICE} = 5 then goodsPRICE between 400000 and 500000 
        else goodsPRICE > 500000
        end
		and city1=#{city1} and goodsCATE in
		<foreach collection="cate" item="cate" open="(" close=")" separator=",">
			#{cate}
		</foreach>
	</select>
	<update id="modifyGoods" parameterType="com.pjt.deal.dto.GoodsDTO">
		update goods 
		set 
		city1 = #{city1},
		city2 = #{city2},
		goodsNAME = #{goodsNAME},
		goodsPRICE = #{goodsPRICE},
		goodsCONTENT = #{goodsCONTENT},
		goodsCATE = #{goodsCATE},
		goodsIMG1 = #{goodsIMG1},
		goodsIMG2 = #{goodsIMG2},
		goodsIMG3 = #{goodsIMG3},
		goodsTIME = now()
		where 
		goodsID = #{goodsID}
	</update>
	<update id="deleteGoods" parameterType="int">
		update goods set state = 'N' where goodsID = #{goodsID}
	</update>
	<update id="completeGoods" parameterType="int">
		update goods set state = 'C' where goodsID = #{goodsID}
	</update>
	<update id="deleteBox" parameterType="int">
		update goods set state = 'CN' where goodsID = #{goodsID}
	</update>
	<update id="cancelBox" parameterType="int">
		update goods set state = 'NN' where goodsID = #{goodsID}
	</update>
	<select id="getHit" parameterType="hashMap" resultType="int">
		select count(*) from hit where goodsID=#{goodsID} and userID=#{userID}
	</select>
	<insert id="addHit" parameterType="hashMap">
		insert
		into hit
		(
			goodsID,
			userID
		)values(
			#{goodsID},
			#{userID}
		)
	</insert>
	<update id="modifyHit" parameterType="hashMap">
		update goods 
		set goodsHIT = goodsHIT + 1 where goodsID=#{goodsID}
	</update>
	<select id="getJjim" parameterType="hashMap" resultType="int">
		select count(*) from jjim where goodsID=#{goodsID} and userID=#{userID}
	</select>
	<insert id="addJjim" parameterType="hashMap">
		insert
		into jjim
		(
			goodsID,
			userID
		)values(
			#{goodsID},
			#{userID}
		)
	</insert>
	<update id="modifyJjim" parameterType="hashMap">
		update goods 
		set jjim = jjim + 1 where goodsID=#{goodsID}
	</update>
	<select id="getJjimList" parameterType="String" resultType="com.pjt.deal.dto.GoodsDTO">
		select A.userID,B.goodsID,goodsIMG1,goodsNAME,format(goodsPRICE,0)as goodsPRICE,city1,city2,state from goods A inner join jjim B on A.goodsID = B.goodsID 
		where B.userID = #{userID} and <![CDATA[A.jjim >= 1]]> and state in ('Y','N','C')
	</select>
	<delete id="deleteJjim" parameterType="hashMap">
		delete from jjim where userID = #{userID} and goodsID = #{goodsID}
	</delete>
	<select id="getJjimGoodsList" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' order by jjim desc limit 6 offset 0 
	</select>
	<select id="getAllJjimGoodsList" resultType="com.pjt.deal.dto.GoodsDTO">
		select goodsID,userID,goodsNAME,city1,city2,goodsCONTENT,format(goodsPRICE,0)as goodsPRICE,goodsCATE,goodsIMG1,goodsIMG2,goodsIMG3,goodsTIME,goodsHIT from goods where state = 'Y' order by jjim desc
	</select>
</mapper>

